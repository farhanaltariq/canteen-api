// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/canteen-menus": {
            "get": {
                "description": "Get All list of Canteen with the Menu",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canteen Menu"
                ],
                "summary": "Get All Canteen Menu",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CanteenMenuDetail"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Link Menu to Canteen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canteen Menu"
                ],
                "summary": "Create Canteen Menu",
                "parameters": [
                    {
                        "description": "Canteen Menu",
                        "name": "CanteenMenu",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CanteenMenuData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CanteenMenu"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/canteen-menus/{id}": {
            "get": {
                "description": "Get Canteen Menu by Canteen ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canteen Menu"
                ],
                "summary": "Get Canteen Menu by Cantten ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Canteen ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CanteenMenu"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Update Relation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canteen Menu"
                ],
                "summary": "Update Canteen Menu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CanteenMenu ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Canteen Menu",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CanteenMenuData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CanteenMenu"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Remove Relation from Menu to Canteen",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canteen Menu"
                ],
                "summary": "Remove Canteen Menu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "CanteenMenu ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/canteens": {
            "get": {
                "description": "Get all canteen",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canteen"
                ],
                "summary": "Get all canteen",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Canteen"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Create Canteen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canteen"
                ],
                "summary": "Create Canteen",
                "parameters": [
                    {
                        "description": "Canteen",
                        "name": "Canteen",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CanteenData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/canteens/seed/{location}": {
            "get": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Adding 1 Canteen to Database from Third Prty API (YELP API)\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canteen"
                ],
                "summary": "Seed Canteen Database",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Canteen location (ex. : New York, Singapore)",
                        "name": "location",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Canteen"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/canteens/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "Authorization": []
                    }
                ],
                "description": "Update canteen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canteen"
                ],
                "summary": "Update canteen",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Canteen id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Canteen",
                        "name": "Canteen",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CanteenData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Canteen"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Remove a canteen from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Canteen"
                ],
                "summary": "Delete canteen",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Canteen id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/menus": {
            "get": {
                "description": "Get All Menu from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Get All Menu",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Menu"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "description": "Manually insert menu to database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Create Menu",
                "parameters": [
                    {
                        "description": "Menu",
                        "name": "Menu",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MenuData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MenuData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/menus/{id}": {
            "get": {
                "description": "Menu Details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Get Menu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Menu id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Menu"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Update Menu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Menu id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Menu",
                        "name": "Menu",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MenuData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.MenuData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authorization": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "summary": "Delete Menu",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Menu id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Logs in a user and returns an access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Perform user login",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserCredential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "Register a user and returns an access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Perform user register",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserCredential"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Canteen": {
            "type": "object",
            "properties": {
                "canteen_name": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_path": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.CanteenData": {
            "type": "object",
            "properties": {
                "canteen_name": {
                    "type": "string"
                },
                "contact": {
                    "type": "string"
                },
                "image_path": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "model.CanteenMenu": {
            "type": "object",
            "properties": {
                "canteen_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "menu_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.CanteenMenuData": {
            "type": "object",
            "properties": {
                "canteen_id": {
                    "type": "integer"
                },
                "menu_id": {
                    "type": "integer"
                }
            }
        },
        "model.CanteenMenuDetail": {
            "type": "object",
            "properties": {
                "canteen_name": {
                    "type": "string"
                },
                "menu": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Menu"
                    }
                }
            }
        },
        "model.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.Menu": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_path": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.MenuData": {
            "type": "object",
            "properties": {
                "image_path": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "stock": {
                    "type": "integer"
                }
            }
        },
        "model.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "model.UserAuthResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserCredential": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Authorization": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.00",
	Host:             "canteen-api.up.railway.app",
	BasePath:         "/api/v1",
	Schemes:          []string{"https", "http"},
	Title:            "Canteen API",
	Description:      "This is a documentation of Canteen API.\nToken can be obtained from /api/v1/login and/or /api/v1/register.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
